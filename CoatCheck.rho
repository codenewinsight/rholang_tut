new MakeCoatCheck in {
   contract MakeCoatCheck(ret) = {
     new port, table in {
       ret!(*port) |
       for(@"new", @arg, ack <= port) {
         new ticket in {
           ack!(*ticket) |
           @{*ticket | *table}!(arg)
         }
       } |
       for(@"get", @arg, ack <= port) {
         for (@value <- @{arg | *table}) {
           @{arg | *table}!(value) |
           ack!(value)
         }
       } |
       for(@"set", @arg1, @arg2, ack <= port) {
         for (_ <- @{arg1 | *table}) {
           @{arg1 | *table}!(arg2) |
           ack!(true)
         }
       }
     }
   } |

   // Usage
   new ret, get, set in {
     MakeCoatCheck!(*ret) |
     for (cc <- ret) {
       // Creates new cell with initial value 0
       cc!("new", 0, *ret) |
       for (ticket <- ret) {
         contract get(return) = { cc!("get", *ticket, *return) } |
         contract set(@value, return) = { cc!("set", *ticket, value, *return) } |
         
         get!(*ret) | for(@r <- ret) {
           //r is equal to 0
           set!(1, *ret) | for(_ <- ret) {
             get!(*ret) | for(@r <- ret) {
               //r is equal to 1
               Nil
             }
           }
         }
       }
     }
   }
 }